

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 27 16:29:24 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15356
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/01/2025 GMT
    17                           ; 
    18                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F15356 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0008                     bsr             equ	8
    51     0005                     fsr0h           equ	5
    52     0004                     fsr0l           equ	4
    53     0007                     fsr1h           equ	7
    54     0006                     fsr1l           equ	6
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0001                     indf1           equ	1
    58     000B                     intcon          equ	11
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0009                     wreg            equ	9
    64     0000                     INDF0           equ	0	;# 
    65     0001                     INDF1           equ	1	;# 
    66     0002                     PCL             equ	2	;# 
    67     0003                     STATUS          equ	3	;# 
    68     0004                     FSR0L           equ	4	;# 
    69     0005                     FSR0H           equ	5	;# 
    70     0006                     FSR1L           equ	6	;# 
    71     0007                     FSR1H           equ	7	;# 
    72     0008                     BSR             equ	8	;# 
    73     0009                     WREG            equ	9	;# 
    74     000A                     PCLATH          equ	10	;# 
    75     000B                     INTCON          equ	11	;# 
    76     000C                     PORTA           equ	12	;# 
    77     000D                     PORTB           equ	13	;# 
    78     000E                     PORTC           equ	14	;# 
    79     0010                     PORTE           equ	16	;# 
    80     0012                     TRISA           equ	18	;# 
    81     0013                     TRISB           equ	19	;# 
    82     0014                     TRISC           equ	20	;# 
    83     0016                     TRISE           equ	22	;# 
    84     0018                     LATA            equ	24	;# 
    85     0019                     LATB            equ	25	;# 
    86     001A                     LATC            equ	26	;# 
    87     009B                     ADRES           equ	155	;# 
    88     009B                     ADRESL          equ	155	;# 
    89     009C                     ADRESH          equ	156	;# 
    90     009D                     ADCON0          equ	157	;# 
    91     009E                     ADCON1          equ	158	;# 
    92     009F                     ADACT           equ	159	;# 
    93     0119                     RC1REG          equ	281	;# 
    94     0119                     RCREG           equ	281	;# 
    95     0119                     RCREG1          equ	281	;# 
    96     011A                     TX1REG          equ	282	;# 
    97     011A                     TXREG1          equ	282	;# 
    98     011A                     TXREG           equ	282	;# 
    99     011B                     SP1BRG          equ	283	;# 
   100     011B                     SPBRG           equ	283	;# 
   101     011B                     SP1BRGL         equ	283	;# 
   102     011B                     SPBRG1          equ	283	;# 
   103     011B                     SPBRGL          equ	283	;# 
   104     011C                     SP1BRGH         equ	284	;# 
   105     011C                     SPBRGH          equ	284	;# 
   106     011C                     SPBRGH1         equ	284	;# 
   107     011D                     RC1STA          equ	285	;# 
   108     011D                     RCSTA1          equ	285	;# 
   109     011D                     RCSTA           equ	285	;# 
   110     011E                     TX1STA          equ	286	;# 
   111     011E                     TXSTA1          equ	286	;# 
   112     011E                     TXSTA           equ	286	;# 
   113     011F                     BAUD1CON        equ	287	;# 
   114     011F                     BAUDCON1        equ	287	;# 
   115     011F                     BAUDCTL1        equ	287	;# 
   116     011F                     BAUDCON         equ	287	;# 
   117     011F                     BAUDCTL         equ	287	;# 
   118     018C                     SSP1BUF         equ	396	;# 
   119     018D                     SSP1ADD         equ	397	;# 
   120     018E                     SSP1MSK         equ	398	;# 
   121     018F                     SSP1STAT        equ	399	;# 
   122     0190                     SSP1CON1        equ	400	;# 
   123     0191                     SSP1CON2        equ	401	;# 
   124     0192                     SSP1CON3        equ	402	;# 
   125     0196                     SSP2BUF         equ	406	;# 
   126     0197                     SSP2ADD         equ	407	;# 
   127     0198                     SSP2MSK         equ	408	;# 
   128     0199                     SSP2STAT        equ	409	;# 
   129     019A                     SSP2CON1        equ	410	;# 
   130     019B                     SSP2CON2        equ	411	;# 
   131     019C                     SSP2CON3        equ	412	;# 
   132     020C                     TMR1            equ	524	;# 
   133     020C                     TMR1L           equ	524	;# 
   134     020D                     TMR1H           equ	525	;# 
   135     020E                     T1CON           equ	526	;# 
   136     020F                     T1GCON          equ	527	;# 
   137     020F                     PR1             equ	527	;# 
   138     0210                     T1GATE          equ	528	;# 
   139     0210                     TMR1GATE        equ	528	;# 
   140     0211                     T1CLK           equ	529	;# 
   141     0211                     TMR1CLK         equ	529	;# 
   142     028C                     T2TMR           equ	652	;# 
   143     028C                     TMR2            equ	652	;# 
   144     028D                     T2PR            equ	653	;# 
   145     028D                     PR2             equ	653	;# 
   146     028E                     T2CON           equ	654	;# 
   147     028F                     T2HLT           equ	655	;# 
   148     0290                     T2CLKCON        equ	656	;# 
   149     0291                     T2RST           equ	657	;# 
   150     030C                     CCPR1           equ	780	;# 
   151     030C                     CCPR1L          equ	780	;# 
   152     030D                     CCPR1H          equ	781	;# 
   153     030E                     CCP1CON         equ	782	;# 
   154     030F                     CCP1CAP         equ	783	;# 
   155     0310                     CCPR2           equ	784	;# 
   156     0310                     CCPR2L          equ	784	;# 
   157     0311                     CCPR2H          equ	785	;# 
   158     0312                     CCP2CON         equ	786	;# 
   159     0313                     CCP2CAP         equ	787	;# 
   160     0314                     PWM3DC          equ	788	;# 
   161     0314                     PWM3DCL         equ	788	;# 
   162     0315                     PWM3DCH         equ	789	;# 
   163     0316                     PWM3CON         equ	790	;# 
   164     0318                     PWM4DC          equ	792	;# 
   165     0318                     PWM4DCL         equ	792	;# 
   166     0319                     PWM4DCH         equ	793	;# 
   167     031A                     PWM4CON         equ	794	;# 
   168     031C                     PWM5DC          equ	796	;# 
   169     031C                     PWM5DCL         equ	796	;# 
   170     031D                     PWM5DCH         equ	797	;# 
   171     031E                     PWM5CON         equ	798	;# 
   172     038C                     PWM6DC          equ	908	;# 
   173     038C                     PWM6DCL         equ	908	;# 
   174     038D                     PWM6DCH         equ	909	;# 
   175     038E                     PWM6CON         equ	910	;# 
   176     058C                     NCO1ACC         equ	1420	;# 
   177     058C                     NCO1ACCL        equ	1420	;# 
   178     058D                     NCO1ACCH        equ	1421	;# 
   179     058E                     NCO1ACCU        equ	1422	;# 
   180     058F                     NCO1INC         equ	1423	;# 
   181     058F                     NCO1INCL        equ	1423	;# 
   182     0590                     NCO1INCH        equ	1424	;# 
   183     0591                     NCO1INCU        equ	1425	;# 
   184     0592                     NCO1CON         equ	1426	;# 
   185     0593                     NCO1CLK         equ	1427	;# 
   186     059C                     TMR0L           equ	1436	;# 
   187     059C                     TMR0            equ	1436	;# 
   188     059D                     TMR0H           equ	1437	;# 
   189     059D                     PR0             equ	1437	;# 
   190     059E                     T0CON0          equ	1438	;# 
   191     059F                     T0CON1          equ	1439	;# 
   192     060C                     CWG1CLKCON      equ	1548	;# 
   193     060D                     CWG1DAT         equ	1549	;# 
   194     060E                     CWG1DBR         equ	1550	;# 
   195     060F                     CWG1DBF         equ	1551	;# 
   196     0610                     CWG1CON0        equ	1552	;# 
   197     0611                     CWG1CON1        equ	1553	;# 
   198     0612                     CWG1AS0         equ	1554	;# 
   199     0613                     CWG1AS1         equ	1555	;# 
   200     0614                     CWG1STR         equ	1556	;# 
   201     070C                     PIR0            equ	1804	;# 
   202     070D                     PIR1            equ	1805	;# 
   203     070E                     PIR2            equ	1806	;# 
   204     070F                     PIR3            equ	1807	;# 
   205     0710                     PIR4            equ	1808	;# 
   206     0711                     PIR5            equ	1809	;# 
   207     0712                     PIR6            equ	1810	;# 
   208     0713                     PIR7            equ	1811	;# 
   209     0716                     PIE0            equ	1814	;# 
   210     0717                     PIE1            equ	1815	;# 
   211     0718                     PIE2            equ	1816	;# 
   212     0719                     PIE3            equ	1817	;# 
   213     071A                     PIE4            equ	1818	;# 
   214     071B                     PIE5            equ	1819	;# 
   215     071C                     PIE6            equ	1820	;# 
   216     071D                     PIE7            equ	1821	;# 
   217     0796                     PMD0            equ	1942	;# 
   218     0797                     PMD1            equ	1943	;# 
   219     0798                     PMD2            equ	1944	;# 
   220     0799                     PMD3            equ	1945	;# 
   221     079A                     PMD4            equ	1946	;# 
   222     079B                     PMD5            equ	1947	;# 
   223     080C                     WDTCON0         equ	2060	;# 
   224     080D                     WDTCON1         equ	2061	;# 
   225     080E                     WDTPSL          equ	2062	;# 
   226     080F                     WDTPSH          equ	2063	;# 
   227     0810                     WDTTMR          equ	2064	;# 
   228     0811                     BORCON          equ	2065	;# 
   229     0812                     VREGCON         equ	2066	;# 
   230     0813                     PCON0           equ	2067	;# 
   231     0814                     PCON1           equ	2068	;# 
   232     081A                     NVMADR          equ	2074	;# 
   233     081A                     NVMADRL         equ	2074	;# 
   234     081B                     NVMADRH         equ	2075	;# 
   235     081C                     NVMDAT          equ	2076	;# 
   236     081C                     NVMDATL         equ	2076	;# 
   237     081D                     NVMDATH         equ	2077	;# 
   238     081E                     NVMCON1         equ	2078	;# 
   239     081F                     NVMCON2         equ	2079	;# 
   240     088C                     CPUDOZE         equ	2188	;# 
   241     088D                     OSCCON1         equ	2189	;# 
   242     088E                     OSCCON2         equ	2190	;# 
   243     088F                     OSCCON3         equ	2191	;# 
   244     0890                     OSCSTAT         equ	2192	;# 
   245     0891                     OSCEN           equ	2193	;# 
   246     0892                     OSCTUNE         equ	2194	;# 
   247     0893                     OSCFRQ          equ	2195	;# 
   248     0895                     CLKRCON         equ	2197	;# 
   249     0896                     CLKRCLK         equ	2198	;# 
   250     090C                     FVRCON          equ	2316	;# 
   251     090E                     DAC1CON0        equ	2318	;# 
   252     090F                     DAC1CON1        equ	2319	;# 
   253     091F                     ZCDCON          equ	2335	;# 
   254     098F                     CMOUT           equ	2447	;# 
   255     098F                     CMSTAT          equ	2447	;# 
   256     0990                     CM1CON0         equ	2448	;# 
   257     0991                     CM1CON1         equ	2449	;# 
   258     0992                     CM1NCH          equ	2450	;# 
   259     0993                     CM1PCH          equ	2451	;# 
   260     0994                     CM2CON0         equ	2452	;# 
   261     0995                     CM2CON1         equ	2453	;# 
   262     0996                     CM2NCH          equ	2454	;# 
   263     0997                     CM2PCH          equ	2455	;# 
   264     0A19                     RC2REG          equ	2585	;# 
   265     0A19                     RCREG2          equ	2585	;# 
   266     0A1A                     TX2REG          equ	2586	;# 
   267     0A1A                     TXREG2          equ	2586	;# 
   268     0A1B                     SP2BRG          equ	2587	;# 
   269     0A1B                     SP2BRGL         equ	2587	;# 
   270     0A1B                     SPBRG2          equ	2587	;# 
   271     0A1C                     SP2BRGH         equ	2588	;# 
   272     0A1C                     SPBRGH2         equ	2588	;# 
   273     0A1D                     RC2STA          equ	2589	;# 
   274     0A1D                     RCSTA2          equ	2589	;# 
   275     0A1E                     TX2STA          equ	2590	;# 
   276     0A1E                     TXSTA2          equ	2590	;# 
   277     0A1F                     BAUD2CON        equ	2591	;# 
   278     0A1F                     BAUDCON2        equ	2591	;# 
   279     0A1F                     BAUDCTL2        equ	2591	;# 
   280     1E0F                     CLCDATA         equ	7695	;# 
   281     1E10                     CLC1CON         equ	7696	;# 
   282     1E11                     CLC1POL         equ	7697	;# 
   283     1E12                     CLC1SEL0        equ	7698	;# 
   284     1E13                     CLC1SEL1        equ	7699	;# 
   285     1E14                     CLC1SEL2        equ	7700	;# 
   286     1E15                     CLC1SEL3        equ	7701	;# 
   287     1E16                     CLC1GLS0        equ	7702	;# 
   288     1E17                     CLC1GLS1        equ	7703	;# 
   289     1E18                     CLC1GLS2        equ	7704	;# 
   290     1E19                     CLC1GLS3        equ	7705	;# 
   291     1E1A                     CLC2CON         equ	7706	;# 
   292     1E1B                     CLC2POL         equ	7707	;# 
   293     1E1C                     CLC2SEL0        equ	7708	;# 
   294     1E1D                     CLC2SEL1        equ	7709	;# 
   295     1E1E                     CLC2SEL2        equ	7710	;# 
   296     1E1F                     CLC2SEL3        equ	7711	;# 
   297     1E20                     CLC2GLS0        equ	7712	;# 
   298     1E21                     CLC2GLS1        equ	7713	;# 
   299     1E22                     CLC2GLS2        equ	7714	;# 
   300     1E23                     CLC2GLS3        equ	7715	;# 
   301     1E24                     CLC3CON         equ	7716	;# 
   302     1E25                     CLC3POL         equ	7717	;# 
   303     1E26                     CLC3SEL0        equ	7718	;# 
   304     1E27                     CLC3SEL1        equ	7719	;# 
   305     1E28                     CLC3SEL2        equ	7720	;# 
   306     1E29                     CLC3SEL3        equ	7721	;# 
   307     1E2A                     CLC3GLS0        equ	7722	;# 
   308     1E2B                     CLC3GLS1        equ	7723	;# 
   309     1E2C                     CLC3GLS2        equ	7724	;# 
   310     1E2D                     CLC3GLS3        equ	7725	;# 
   311     1E2E                     CLC4CON         equ	7726	;# 
   312     1E2F                     CLC4POL         equ	7727	;# 
   313     1E30                     CLC4SEL0        equ	7728	;# 
   314     1E31                     CLC4SEL1        equ	7729	;# 
   315     1E32                     CLC4SEL2        equ	7730	;# 
   316     1E33                     CLC4SEL3        equ	7731	;# 
   317     1E34                     CLC4GLS0        equ	7732	;# 
   318     1E35                     CLC4GLS1        equ	7733	;# 
   319     1E36                     CLC4GLS2        equ	7734	;# 
   320     1E37                     CLC4GLS3        equ	7735	;# 
   321     1E8F                     PPSLOCK         equ	7823	;# 
   322     1E90                     INTPPS          equ	7824	;# 
   323     1E91                     T0CKIPPS        equ	7825	;# 
   324     1E92                     T1CKIPPS        equ	7826	;# 
   325     1E93                     T1GPPS          equ	7827	;# 
   326     1E9C                     T2INPPS         equ	7836	;# 
   327     1EA1                     CCP1PPS         equ	7841	;# 
   328     1EA2                     CCP2PPS         equ	7842	;# 
   329     1EB1                     CWG1PPS         equ	7857	;# 
   330     1EBB                     CLCIN0PPS       equ	7867	;# 
   331     1EBC                     CLCIN1PPS       equ	7868	;# 
   332     1EBD                     CLCIN2PPS       equ	7869	;# 
   333     1EBE                     CLCIN3PPS       equ	7870	;# 
   334     1EC3                     ADACTPPS        equ	7875	;# 
   335     1EC5                     SSP1CLKPPS      equ	7877	;# 
   336     1EC6                     SSP1DATPPS      equ	7878	;# 
   337     1EC7                     SSP1SSPPS       equ	7879	;# 
   338     1EC8                     SSP2CLKPPS      equ	7880	;# 
   339     1EC9                     SSP2DATPPS      equ	7881	;# 
   340     1ECA                     SSP2SSPPS       equ	7882	;# 
   341     1ECB                     RX1DTPPS        equ	7883	;# 
   342     1ECC                     TX1CKPPS        equ	7884	;# 
   343     1ECD                     RX2DTPPS        equ	7885	;# 
   344     1ECE                     TX2CKPPS        equ	7886	;# 
   345     1F10                     RA0PPS          equ	7952	;# 
   346     1F11                     RA1PPS          equ	7953	;# 
   347     1F12                     RA2PPS          equ	7954	;# 
   348     1F13                     RA3PPS          equ	7955	;# 
   349     1F14                     RA4PPS          equ	7956	;# 
   350     1F15                     RA5PPS          equ	7957	;# 
   351     1F16                     RA6PPS          equ	7958	;# 
   352     1F17                     RA7PPS          equ	7959	;# 
   353     1F18                     RB0PPS          equ	7960	;# 
   354     1F19                     RB1PPS          equ	7961	;# 
   355     1F1A                     RB2PPS          equ	7962	;# 
   356     1F1B                     RB3PPS          equ	7963	;# 
   357     1F1C                     RB4PPS          equ	7964	;# 
   358     1F1D                     RB5PPS          equ	7965	;# 
   359     1F1E                     RB6PPS          equ	7966	;# 
   360     1F1F                     RB7PPS          equ	7967	;# 
   361     1F20                     RC0PPS          equ	7968	;# 
   362     1F21                     RC1PPS          equ	7969	;# 
   363     1F22                     RC2PPS          equ	7970	;# 
   364     1F23                     RC3PPS          equ	7971	;# 
   365     1F24                     RC4PPS          equ	7972	;# 
   366     1F25                     RC5PPS          equ	7973	;# 
   367     1F26                     RC6PPS          equ	7974	;# 
   368     1F27                     RC7PPS          equ	7975	;# 
   369     1F38                     ANSELA          equ	7992	;# 
   370     1F39                     WPUA            equ	7993	;# 
   371     1F3A                     ODCONA          equ	7994	;# 
   372     1F3B                     SLRCONA         equ	7995	;# 
   373     1F3C                     INLVLA          equ	7996	;# 
   374     1F3D                     IOCAP           equ	7997	;# 
   375     1F3E                     IOCAN           equ	7998	;# 
   376     1F3F                     IOCAF           equ	7999	;# 
   377     1F43                     ANSELB          equ	8003	;# 
   378     1F44                     WPUB            equ	8004	;# 
   379     1F45                     ODCONB          equ	8005	;# 
   380     1F46                     SLRCONB         equ	8006	;# 
   381     1F47                     INLVLB          equ	8007	;# 
   382     1F48                     IOCBP           equ	8008	;# 
   383     1F49                     IOCBN           equ	8009	;# 
   384     1F4A                     IOCBF           equ	8010	;# 
   385     1F4E                     ANSELC          equ	8014	;# 
   386     1F4F                     WPUC            equ	8015	;# 
   387     1F50                     ODCONC          equ	8016	;# 
   388     1F51                     SLRCONC         equ	8017	;# 
   389     1F52                     INLVLC          equ	8018	;# 
   390     1F53                     IOCCP           equ	8019	;# 
   391     1F54                     IOCCN           equ	8020	;# 
   392     1F55                     IOCCF           equ	8021	;# 
   393     1F65                     WPUE            equ	8037	;# 
   394     1F68                     INLVLE          equ	8040	;# 
   395     1F69                     IOCEP           equ	8041	;# 
   396     1F6A                     IOCEN           equ	8042	;# 
   397     1F6B                     IOCEF           equ	8043	;# 
   398     1FE4                     STATUS_SHAD     equ	8164	;# 
   399     1FE5                     WREG_SHAD       equ	8165	;# 
   400     1FE6                     BSR_SHAD        equ	8166	;# 
   401     1FE7                     PCLATH_SHAD     equ	8167	;# 
   402     1FE8                     FSR0_SHAD       equ	8168	;# 
   403     1FE8                     FSR0L_SHAD      equ	8168	;# 
   404     1FE9                     FSR0H_SHAD      equ	8169	;# 
   405     1FEA                     FSR1L_SHAD      equ	8170	;# 
   406     1FEB                     FSR1H_SHAD      equ	8171	;# 
   407     1FED                     STKPTR          equ	8173	;# 
   408     1FEE                     TOSL            equ	8174	;# 
   409     1FEF                     TOSH            equ	8175	;# 
   410     0013                     _TRISBbits      set	19
   411     0199                     _SSP2STATbits   set	409
   412     0196                     _SSP2BUF        set	406
   413     019B                     _SSP2CON2bits   set	411
   414     0197                     _SSP2ADD        set	407
   415     019A                     _SSP2CON1bits   set	410
   416     070F                     _PIR3bits       set	1807
   417     0893                     _OSCFRQbits     set	2195
   418     1EC9                     _SSP2DATPPS     set	7881
   419     1EC8                     _SSP2CLKPPS     set	7880
   420     1F1A                     _RB2PPS         set	7962
   421     1F19                     _RB1PPS         set	7961
   422     1F43                     _ANSELBbits     set	8003
   423                           
   424                           	psect	cinit
   425     07FD                     start_initialization:	
   426                           ; #config settings
   427                           
   428     07FD                     __initialization:
   429     07FD                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432     07FD                     __end_of__initialization:
   433     07FD  0140               	movlb	0
   434     07FE  3187  2FDE         	ljmp	_main	;jump to C main() function
   435                           
   436                           	psect	cstackCOMMON
   437     0070                     __pcstackCOMMON:
   438     0070                     ?_osc_init:
   439     0070                     ?_i2c_init:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_i2c_start:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_i2c_stop:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_i2c_write:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     i2c_write@data:	
   455                           ; 2 bytes @ 0x0
   456                           
   457     0070                     ??_osc_init:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ??_i2c_init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ??_i2c_start:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ??_i2c_stop:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ??_i2c_write:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 1 bytes @ 0x0
   474     0070                     	ds	1
   475     0071                     ?_dac_write:
   476     0071                     dac_write@value:	
   477                           ; 1 bytes @ 0x1
   478                           
   479                           
   480                           ; 2 bytes @ 0x1
   481     0071                     	ds	2
   482     0073                     ??_dac_write:
   483     0073                     ??_main:	
   484                           ; 1 bytes @ 0x3
   485                           
   486                           
   487                           	psect	maintext
   488     07DE                     __pmaintext:	
   489                           ; 1 bytes @ 0x3
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 57 in file "main_16_bit.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  2   36[None  ] int 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B3F/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels required when called: 2
   515 ;; This function calls:
   516 ;;		_dac_write
   517 ;;		_i2c_init
   518 ;;		_osc_init
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524     07DE                     _main:	
   525                           ;psect for function _main
   526                           
   527     07DE                     l656:	
   528                           ;incstack = 0
   529                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;main_16_bit.c: 60:     osc_init();
   533     07DE  3187  2791  3187   	fcall	_osc_init
   534     07E1                     l658:
   535                           
   536                           ;main_16_bit.c: 62:     TRISBbits.TRISB1 = 1;
   537     07E1  0140               	movlb	0	; select bank0
   538     07E2  1493               	bsf	19,1	;volatile
   539     07E3                     l660:
   540                           
   541                           ;main_16_bit.c: 63:     TRISBbits.TRISB2 = 1;
   542     07E3  1513               	bsf	19,2	;volatile
   543     07E4                     l662:
   544                           
   545                           ;main_16_bit.c: 65:     ANSELBbits.ANSB1 = 0;
   546     07E4  017E               	movlb	62	; select bank62
   547     07E5  10C3               	bcf	67,1	;volatile
   548     07E6                     l664:
   549                           
   550                           ;main_16_bit.c: 66:     ANSELBbits.ANSB2 = 0;
   551     07E6  1143               	bcf	67,2	;volatile
   552     07E7                     l666:
   553                           
   554                           ;main_16_bit.c: 68:     RB1PPS = 0x21;
   555     07E7  3021               	movlw	33
   556     07E8  0099               	movwf	25	;volatile
   557     07E9                     l668:
   558                           
   559                           ;main_16_bit.c: 69:     RB2PPS = 0x22;
   560     07E9  3022               	movlw	34
   561     07EA  009A               	movwf	26	;volatile
   562     07EB                     l670:
   563                           
   564                           ;main_16_bit.c: 71:     SSP2CLKPPS = 0x09;
   565     07EB  3009               	movlw	9
   566     07EC  017D               	movlb	61	; select bank61
   567     07ED  00C8               	movwf	72	;volatile
   568     07EE                     l672:
   569                           
   570                           ;main_16_bit.c: 72:     SSP2DATPPS = 0x0A;
   571     07EE  300A               	movlw	10
   572     07EF  00C9               	movwf	73	;volatile
   573                           
   574                           ;main_16_bit.c: 74:     i2c_init();
   575     07F0  3187  27A5  3187   	fcall	_i2c_init
   576     07F3                     l37:	
   577                           ;main_16_bit.c: 80:     while(1)
   578                           
   579                           
   580                           ;main_16_bit.c: 81:     {;main_16_bit.c: 82:         dac_write(2047);
   581     07F3  30FF               	movlw	255
   582     07F4  00F1               	movwf	dac_write@value
   583     07F5  3007               	movlw	7
   584     07F6  00F2               	movwf	dac_write@value+1
   585     07F7  3187  27C2  3187   	fcall	_dac_write
   586     07FA  2FF3               	goto	l37
   587     07FB  3180  2802         	ljmp	start
   588     07FD                     __end_of_main:
   589                           
   590                           	psect	text1
   591     0791                     __ptext1:	
   592 ;; *************** function _osc_init *****************
   593 ;; Defined at:
   594 ;;		line 95 in file "main_16_bit.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621     0791                     _osc_init:	
   622                           ;psect for function _osc_init
   623                           
   624     0791                     l608:	
   625                           ;incstack = 0
   626                           ; Regs used in _osc_init: [wreg+status,2+status,0]
   627                           
   628                           
   629                           ;main_16_bit.c: 97:     OSCFRQbits.HFFRQ = 4;
   630     0791  0151               	movlb	17	; select bank17
   631     0792  0813               	movf	19,w	;volatile
   632     0793  39F8               	andlw	-8
   633     0794  3804               	iorlw	4
   634     0795  0093               	movwf	19	;volatile
   635     0796                     l43:
   636     0796  0008               	return
   637     0797                     __end_of_osc_init:
   638                           
   639                           	psect	text2
   640     07A5                     __ptext2:	
   641 ;; *************** function _i2c_init *****************
   642 ;; Defined at:
   643 ;;		line 108 in file "main_16_bit.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670     07A5                     _i2c_init:	
   671                           ;psect for function _i2c_init
   672                           
   673     07A5                     l610:	
   674                           ;incstack = 0
   675                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
   676                           
   677                           
   678                           ;main_16_bit.c: 110:     SSP2CON1bits.SSPM = 8;
   679     07A5  0143               	movlb	3	; select bank3
   680     07A6  081A               	movf	26,w	;volatile
   681     07A7  39F0               	andlw	-16
   682     07A8  3808               	iorlw	8
   683     07A9  009A               	movwf	26	;volatile
   684     07AA                     l612:
   685                           
   686                           ;main_16_bit.c: 111:     SSP2CON1bits.SSPEN = 1;
   687     07AA  169A               	bsf	26,5	;volatile
   688     07AB                     l614:
   689                           
   690                           ;main_16_bit.c: 112:     SSP2ADD = 0x1D;
   691     07AB  301D               	movlw	29
   692     07AC  0097               	movwf	23	;volatile
   693     07AD                     l46:
   694     07AD  0008               	return
   695     07AE                     __end_of_i2c_init:
   696                           
   697                           	psect	text3
   698     07C2                     __ptext3:	
   699 ;; *************** function _dac_write *****************
   700 ;; Defined at:
   701 ;;		line 176 in file "main_16_bit.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  value           2    1[COMMON] unsigned short 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        2 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 1
   722 ;; This function calls:
   723 ;;		_i2c_start
   724 ;;		_i2c_stop
   725 ;;		_i2c_write
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     07C2                     _dac_write:	
   732                           ;psect for function _dac_write
   733                           
   734     07C2                     l650:	
   735                           ;incstack = 0
   736                           ; Regs used in _dac_write: [wreg+status,2+status,0+pclath+cstack]
   737                           
   738                           
   739                           ;main_16_bit.c: 176: void dac_write(uint16_t value);main_16_bit.c: 177: {;main_16_bit.c:
      +                           179:     value &= 0x0FFF;
   740     07C2  30FF               	movlw	255
   741     07C3  05F1               	andwf	dac_write@value,f
   742     07C4  300F               	movlw	15
   743     07C5  05F2               	andwf	dac_write@value+1,f
   744     07C6                     l652:
   745                           
   746                           ;main_16_bit.c: 181:     i2c_start();
   747     07C6  3187  2797  3187   	fcall	_i2c_start
   748                           
   749                           ;main_16_bit.c: 182:     i2c_write(0x1E);
   750     07C9  301E               	movlw	30
   751     07CA  3187  27AE  3187   	fcall	_i2c_write
   752                           
   753                           ;main_16_bit.c: 183:     i2c_write(0x1C);
   754     07CD  301C               	movlw	28
   755     07CE  3187  27AE  3187   	fcall	_i2c_write
   756                           
   757                           ;main_16_bit.c: 187:     i2c_write((value >> 8) & 0x0F);
   758     07D1  0872               	movf	dac_write@value+1,w
   759     07D2  390F               	andlw	15
   760     07D3  3187  27AE  3187   	fcall	_i2c_write
   761                           
   762                           ;main_16_bit.c: 190:     i2c_write(value & 0xFF);
   763     07D6  0871               	movf	dac_write@value,w
   764     07D7  3187  27AE  3187   	fcall	_i2c_write
   765     07DA                     l654:
   766                           
   767                           ;main_16_bit.c: 192:     i2c_stop();
   768     07DA  3187  279E  3187   	fcall	_i2c_stop
   769     07DD                     l73:
   770     07DD  0008               	return
   771     07DE                     __end_of_dac_write:
   772                           
   773                           	psect	text4
   774     07AE                     __ptext4:	
   775 ;; *************** function _i2c_write *****************
   776 ;; Defined at:
   777 ;;		line 148 in file "main_16_bit.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  data            1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  data            1    0[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_dac_write
   801 ;;		_enable_internal_reference
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805     07AE                     _i2c_write:	
   806                           ;psect for function _i2c_write
   807                           
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _i2c_write: [wreg]
   811                           ;i2c_write@data stored from wreg
   812     07AE  00F0               	movwf	i2c_write@data
   813     07AF                     l606:
   814                           
   815                           ;main_16_bit.c: 148: void i2c_write(uint8_t data);main_16_bit.c: 149: {;main_16_bit.c: 1
      +                          50:     SSP2BUF = data;
   816     07AF  0870               	movf	i2c_write@data,w
   817     07B0  0143               	movlb	3	; select bank3
   818     07B1  0096               	movwf	22	;volatile
   819     07B2                     l61:	
   820                           ;main_16_bit.c: 152:     while(SSP2STATbits.BF);
   821                           
   822     07B2  1819               	btfsc	25,0	;volatile
   823     07B3  2FB5               	goto	u31
   824     07B4  2FB6               	goto	u30
   825     07B5                     u31:
   826     07B5  2FB2               	goto	l61
   827     07B6                     u30:
   828     07B6                     l64:
   829     07B6  014E               	movlb	14	; select bank14
   830     07B7  1D0F               	btfss	15,2	;volatile
   831     07B8  2FBA               	goto	u41
   832     07B9  2FBB               	goto	u40
   833     07BA                     u41:
   834     07BA  2FB6               	goto	l64
   835     07BB                     u40:
   836     07BB                     l66:
   837                           
   838                           ;main_16_bit.c: 154:     PIR3bits.SSP2IF = 0;
   839     07BB  110F               	bcf	15,2	;volatile
   840     07BC                     l67:	
   841                           ;main_16_bit.c: 155:     while(SSP2CON2bits.ACKSTAT);
   842                           
   843     07BC  0143               	movlb	3	; select bank3
   844     07BD  1B1B               	btfsc	27,6	;volatile
   845     07BE  2FC0               	goto	u51
   846     07BF  2FC1               	goto	u50
   847     07C0                     u51:
   848     07C0  2FBC               	goto	l67
   849     07C1                     u50:
   850     07C1                     l70:
   851     07C1  0008               	return
   852     07C2                     __end_of_i2c_write:
   853                           
   854                           	psect	text5
   855     079E                     __ptext5:	
   856 ;; *************** function _i2c_stop *****************
   857 ;; Defined at:
   858 ;;		line 135 in file "main_16_bit.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		None
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_dac_write
   882 ;;		_enable_internal_reference
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886     079E                     _i2c_stop:	
   887                           ;psect for function _i2c_stop
   888                           
   889     079E                     l604:	
   890                           ;incstack = 0
   891                           ; Regs used in _i2c_stop: []
   892                           
   893                           
   894                           ;main_16_bit.c: 137:     SSP2CON2bits.PEN = 1;
   895     079E  0143               	movlb	3	; select bank3
   896     079F  151B               	bsf	27,2	;volatile
   897     07A0                     l55:	
   898                           ;main_16_bit.c: 138:     while(SSP2CON2bits.PEN);
   899                           
   900     07A0  191B               	btfsc	27,2	;volatile
   901     07A1  2FA3               	goto	u21
   902     07A2  2FA4               	goto	u20
   903     07A3                     u21:
   904     07A3  2FA0               	goto	l55
   905     07A4                     u20:
   906     07A4                     l58:
   907     07A4  0008               	return
   908     07A5                     __end_of_i2c_stop:
   909                           
   910                           	psect	text6
   911     0797                     __ptext6:	
   912 ;; *************** function _i2c_start *****************
   913 ;; Defined at:
   914 ;;		line 122 in file "main_16_bit.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		None
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_dac_write
   938 ;;		_enable_internal_reference
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     0797                     _i2c_start:	
   943                           ;psect for function _i2c_start
   944                           
   945     0797                     l602:	
   946                           ;incstack = 0
   947                           ; Regs used in _i2c_start: []
   948                           
   949                           
   950                           ;main_16_bit.c: 124:     SSP2CON2bits.SEN = 1;
   951     0797  0143               	movlb	3	; select bank3
   952     0798  141B               	bsf	27,0	;volatile
   953     0799                     l49:	
   954                           ;main_16_bit.c: 125:     while(SSP2CON2bits.SEN);
   955                           
   956     0799  181B               	btfsc	27,0	;volatile
   957     079A  2F9C               	goto	u11
   958     079B  2F9D               	goto	u10
   959     079C                     u11:
   960     079C  2F99               	goto	l49
   961     079D                     u10:
   962     079D                     l52:
   963     079D  0008               	return
   964     079E                     __end_of_i2c_start:
   965     0003                     ___latbits      equ	3
   966     007E                     btemp           set	126	;btemp
   967     007E                     wtemp0          set	126
   968                           
   969                           	psect	config
   970                           
   971                           ;Config register CONFIG1 @ 0x8007
   972                           ;	External Oscillator mode selection bits
   973                           ;	FEXTOSC = OFF, Oscillator not enabled
   974                           ;	Power-up default value for COSC bits
   975                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
   976                           ;	Clock Out Enable bit
   977                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
   978                           ;	Clock Switch Enable bit
   979                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   980                           ;	Fail-Safe Clock Monitor Enable bit
   981                           ;	FCMEN = ON, FSCM timer enabled
   982     8007                     	org	32775
   983     8007  3F8C               	dw	16268
   984                           
   985                           ;Config register CONFIG2 @ 0x8008
   986                           ;	Master Clear Enable bit
   987                           ;	MCLRE = ON, MCLR pin is Master Clear function
   988                           ;	Power-up Timer Enable bit
   989                           ;	PWRTE = OFF, PWRT disabled
   990                           ;	Low-Power BOR enable bit
   991                           ;	LPBOREN = OFF, ULPBOR disabled
   992                           ;	Brown-out reset enable bits
   993                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   994                           ;	Brown-out Reset Voltage Selection
   995                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
   996                           ;	Zero-cross detect disable
   997                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
   998                           ;	Peripheral Pin Select one-way control
   999                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  1000                           ;	Stack Overflow/Underflow Reset Enable bit
  1001                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1002     8008                     	org	32776
  1003     8008  3FFF               	dw	16383
  1004                           
  1005                           ;Config register CONFIG3 @ 0x8009
  1006                           ;	WDT Period Select bits
  1007                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1008                           ;	WDT operating mode
  1009                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  1010                           ;	WDT Window Select bits
  1011                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1012                           ;	WDT input clock selector
  1013                           ;	WDTCCS = SC, Software Control
  1014     8009                     	org	32777
  1015     8009  3F9F               	dw	16287
  1016                           
  1017                           ;Config register CONFIG4 @ 0x800A
  1018                           ;	Boot Block Size Selection bits
  1019                           ;	BBSIZE = BB512, 512 words boot block size
  1020                           ;	Boot Block Enable bit
  1021                           ;	BBEN = OFF, Boot Block disabled
  1022                           ;	SAF Enable bit
  1023                           ;	SAFEN = OFF, SAF disabled
  1024                           ;	Application Block Write Protection bit
  1025                           ;	WRTAPP = OFF, Application Block not write protected
  1026                           ;	Boot Block Write Protection bit
  1027                           ;	WRTB = OFF, Boot Block not write protected
  1028                           ;	Configuration Register Write Protection bit
  1029                           ;	WRTC = OFF, Configuration Register not write protected
  1030                           ;	Storage Area Flash Write Protection bit
  1031                           ;	WRTSAF = OFF, SAF not write protected
  1032                           ;	Low Voltage Programming Enable bit
  1033                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  1034     800A                     	org	32778
  1035     800A  3FFF               	dw	16383
  1036                           
  1037                           ;Config register CONFIG5 @ 0x800B
  1038                           ;	UserNVM Program memory code protection bit
  1039                           ;	CP = OFF, UserNVM code protection disabled
  1040     800B                     	org	32779
  1041     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dac_write
    _dac_write->_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      61
                          _dac_write
                           _i2c_init
                           _osc_init
 ---------------------------------------------------------------------------------
 (1) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dac_write                                            2     0      2      61
                                              1 COMMON     2     0      2
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dac_write
     _i2c_start
     _i2c_stop
     _i2c_write
   _i2c_init
   _osc_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      3       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 27 16:29:24 2025

         dac_write@value 0071                       l43 0796                       l52 079D  
                     l61 07B2                       l37 07F3                       l70 07C1  
                     l46 07AD                       l55 07A0                       l64 07B6  
                     l49 0799                       l73 07DD                       l58 07A4  
                     l66 07BB                       l67 07BC                       u10 079D  
                     u11 079C                       u20 07A4                       u21 07A3  
                     u30 07B6                       u31 07B5                       u40 07BB  
                     u41 07BA                       u50 07C1                       u51 07C0  
                    l602 0797                      l610 07A5                      l604 079E  
                    l612 07AA                      l606 07AF                      l614 07AB  
                    l608 0791                      l650 07C2                      l652 07C6  
                    l660 07E3                      l654 07DA                      l670 07EB  
                    l662 07E4                      l672 07EE                      l664 07E6  
                    l656 07DE                      l666 07E7                      l658 07E1  
                    l668 07E9                     _main 07DE                     btemp 007E  
                   start 0002                    ?_main 0070                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD         __end_of_i2c_init 07AE  
       __end_of_i2c_stop 07A5                   ??_main 0073                   _RB1PPS 1F19  
                 _RB2PPS 1F1A         __end_of_osc_init 0797  __end_of__initialization 07FD  
         __pcstackCOMMON 0070        __end_of_i2c_start 079E        __end_of_i2c_write 07C2  
              ?_i2c_init 0070                ?_i2c_stop 0070               __pmaintext 07DE  
      __end_of_dac_write 07DE                  _SSP2ADD 0197                  _SSP2BUF 0196  
             ??_i2c_init 0070               ??_i2c_stop 0070                ?_osc_init 0070  
                __ptext1 0791                  __ptext2 07A5                  __ptext3 07C2  
                __ptext4 07AE                  __ptext5 079E                  __ptext6 0797  
   end_of_initialization 07FD               ??_osc_init 0070            i2c_write@data 0070  
              _TRISBbits 0013      start_initialization 07FD                _i2c_start 0797  
              _i2c_write 07AE                ___latbits 0003               ?_i2c_start 0070  
             ?_i2c_write 0070                _dac_write 07C2               ?_dac_write 0071  
               _PIR3bits 070F              ??_i2c_start 0070              ??_i2c_write 0070  
               _i2c_init 07A5                 _i2c_stop 079E               _ANSELBbits 1F43  
           _SSP2CON1bits 019A             _SSP2CON2bits 019B              ??_dac_write 0073  
               _osc_init 0791             _SSP2STATbits 0199               _OSCFRQbits 0893  
             _SSP2DATPPS 1EC9               _SSP2CLKPPS 1EC8  
